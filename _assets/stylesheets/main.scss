@charset 'utf-8';

@import 'bourbon';
@import 'grid-settings';
@import 'neat';
@import 'grid-settings';


////////////////////////////////////////////////////////////////////////////////
// #  Variables
//
// Much of the typographic sizing for the body is setup here to accompany body
// text set at 16px.
//
$leading-body:            1.8;
$leading-heading:         1.4;
$type-size-body:          16;

// ## Spacing based on the leading (the line-height).
//
// This spacing unit is relative to the element’s font-size/$leading-body. We
// setup the leading (base line-hight) as our spacing unit (in ems).
//
$line-single:             ($leading-body * 1em); // 1.6em
$line-double:             ($line-single * 2);
$line-three-quarter:      ($line-single * .75);
$line-half:               ($line-single / 2);
$line-quarter:            ($line-single / 4);

// ## Colours
//
$white:                   #fff;
$black:                   #000;

$off-white:               #f0f3f5;
$off-black:               #101010;

$yellow:                  #eccf00;

$grey:                    #6e6e6e;
$light-grey:              lighten($grey, 15%);
$lighter-grey:            lighten($grey, 35%);
$transparent-grey:        rgba(0, 0, 0, 0.1);


$action-colour:           #477dca;

// ## Type families
//
$font-stack-monospace: 'Operator Mono', 'Lucida Sans Typewriter', 'Lucida Console', Monaco, 'Bitstream Vera Sans Mono', monospace;

$font-stack-system: (
  -apple-system,
  BlinkMacSystemFont,
  'Avenir Next',
  'Avenir',
  'Segoe UI',
  'Lucida Grande',
  'Helvetica Neue',
  'Helvetica',
  'Fira Sans',
  'Roboto',
  'Noto',
  'Droid Sans',
  'Cantarell',
  'Oxygen',
  'Ubuntu',
  'Franklin Gothic Medium',
  'Century Gothic',
  'Liberation Sans',
  sans-serif,
);

$font-stack-serif: Cambria, "Hoefler Text", Utopia, "Liberation Serif", "Nimbus Roman No9 L Regular", Times, "Times New Roman", serif;

$base-duration: 150ms;
$base-timing: ease;


////////////////////////////////////////////////////////////////////////////////
// #  Mixins & functions

// ## Pixel to rem function
//
// Input: unitless numbers (the intended pixel value output).
//
// Assumes that the the body or html has a font-size of 16px.
//
// Effectively re-implements Bourbon’s pixel to rem calc function from <5.0.0.
//
@function rem($pxval) {
  $base-size: $type-size-body;

  @return ($pxval / $base-size) * 1rem;
}

@mixin wrapper-padding {
  @include media($desktop) {
    padding-left: $gutter * 2;
    padding-right: $gutter * 2;
    width: 100%;
  }

  box-sizing: border-box;
  padding-left: $gutter;
  padding-right: $gutter;

  width: 100%;
}

@mixin wrapper {
  @include wrapper-padding;
  @include outer-container;
}

@mixin sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

@mixin ie-clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
    height: 0;
  }
}


////////////////////////////////////////////////////////////////////////////////
// #  Custom partial imports
//
@import 'body';
@import 'responsive-media';
@import 'headings';
@import 'header';
@import 'navigation';
@import 'main-typography';
@import 'speakers';
@import 'sponsors-stuff';
@import 'footer';

.wrapper {
  @include wrapper;
}
